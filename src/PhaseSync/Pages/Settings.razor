@page "/settings"
@using System.ComponentModel.DataAnnotations;
@attribute [Authorize]
<PageTitle>Settings - PhaseSync</PageTitle>
<MudGrid Class="justify-center pt-16 mt-16">
    <MudItem xs="12" md="7">
        <MudPaper Class="ps-4 pt-2 pb-4 mb-4">
            @if (!SettingsComplete)
            {
                <MudAlert Severity="Severity.Warning">
                    Automatic workout sync is blocked because the settings below are incomplete.
               </MudAlert>
            }
            <MudSwitch
                Disabled="@(!SettingsComplete)"
                @bind-Checked="@SyncEnabled"
                Class="mt-3"
                Size="Size.Large"
                Color="Color.Primary">Enable automatic workout sync</MudSwitch>
        </MudPaper>
        <MudExpansionPanels>
            <MudExpansionPanel>
                <TitleContent>
                    <div class="d-flex">
                        <MudIcon 
                            Class="mr-3"
                            Icon="@(TAOConnected ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Warning)"
                            Color="@(TAOConnected? Color.Primary : Color.Error)"/>
                        <MudText>TrainAsONE</MudText>
                    </div>
                </TitleContent>
                <ChildContent>
                    @if (TAOConnected)
                    {
                        <MudAlert Severity="Severity.Success">
                            API Access granted!
                       </MudAlert>
                        <MudStack Row=true Class="justify-space-between pt-4">
                            <MudText></MudText>
                            <MudButton Color="Color.Error" OnClick="@RemoveTAO">Disconnect</MudButton>
                        </MudStack>
                    }
                    else
                    {
                    <MudAlert Severity="Severity.Info">
                        You can grant access to your TrainAsONE Workouts via OAuth2 API.
                   </MudAlert>
                        <MudStack Row=true Class="justify-space-between pt-4">
                            <MudText></MudText>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@AuthorizeTAO">Connect</MudButton>
                        </MudStack>
                    }
                    

                    <MudForm @ref="@form" @bind-IsValid="@PolarFormValid">
                        <MudTextField
                            T="string"
                            Label="Token"
                            Required="true"
                            RequiredError="Token is required!"
                            Class="mt-3" 
                            @bind-Value="@TAOToken" />
                        <MudStack Row=true Class="justify-space-between pt-4">
                            <MudText></MudText>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@SetTAOToken">Manually Change Token</MudButton>
                        </MudStack>
                    </MudForm>


                </ChildContent>
            </MudExpansionPanel>
            <MudExpansionPanel>
                <TitleContent>
                    <div class="d-flex">
                        <MudIcon 
                            Class="mr-3"
                            Icon="@(PolarConnected ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Warning)"
                            Color="@(PolarConnected? Color.Primary : Color.Error)"/>
                        <MudText>Polar Flow</MudText>
                    </div>
                </TitleContent>
                <ChildContent>
                    <MudAlert Severity="Severity.Warning">
                        Storing Passwords is obviously not a great idea,
                        but Polar does not provide a way to create phased workouts via an API.
                        Therefore, we need to store your password in order to create workouts on your behalf.
                        Your password will be encrypted before being stored.
                   </MudAlert>
                    <MudForm @ref="@form" @bind-IsValid="@PolarFormValid">
                        <MudTextField
                            T="string"
                            Label="Email"
                            Required="true"
                            RequiredError="Email is required!"
                            Class="mt-3" 
                            @bind-Value="@PolarEmail"
                            Validation="@(new EmailAddressAttribute() {ErrorMessage="The email address is invalid"})" />
                        <MudTextField 
                            T="string" 
                            Label="Password" 
                            Required="true" 
                            RequiredError="Password is required!" 
                            Class="mt-3"
                            @bind-Value="@PolarPassword"
                            InputType="InputType.Password"/>
                        <MudStack Row=true Class="justify-space-between pt-4">
                            <MudText></MudText>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!PolarFormValid)" Class="ml-auto" OnClick="@(async () => await SetPolarPassword())">Save credentials</MudButton>
                        </MudStack>
                    </MudForm>
                </ChildContent>
            </MudExpansionPanel>
              <MudExpansionPanel>
                <TitleContent>
                    <div class="d-flex">
                        <MudIcon 
                            Class="mr-3"
                            Icon="@(HasUnit && HasMode && HasMas && HasRadius
                                ? Icons.Material.Filled.CheckCircle
                                : Icons.Material.Filled.Warning)"
                            Color="@(HasUnit && HasMode && HasMas && HasRadius
                                ? Color.Primary
                                : Color.Error)"/>
                        <MudText>Phased Target Settings</MudText>
                    </div>
                </TitleContent>
                <ChildContent>
                    <MudForm @ref="@form2" @bind-IsValid="@SettingsFormValid">
                        <MudSelect 
                                @bind-Value="Unit" 
                                Class="mt-3"
                                Label="Unit system" 
                                Placeholder="Please Select" 
                                Required="true" 
                                RequiredError="Unit system is required!" 
                                AdornmentIcon="@Icons.Material.Filled.SquareFoot"
                                AdornmentColor="Color.Primary">
                            <MudSelectItem Value="@("IMPERIAL")">Imperial</MudSelectItem>
                            <MudSelectItem Value="@("METRIC")">Metric</MudSelectItem>
                        </MudSelect>
                        <MudSelect 
                                @bind-Value="Mode"
                                Class="mt-3"
                                Label="Speed format"
                                Placeholder="Please Select"
                                Required="true" 
                                RequiredError="Speed format is required!" 
                                AdornmentIcon="@Icons.Material.Filled.Speed"
                                AdornmentColor="Color.Primary">
                            <MudSelectItem Value="@("SPEED")" Disabled="true">Speed (Disabled)</MudSelectItem>
                            <MudSelectItem Value="@("PACE")">Pace</MudSelectItem>
                        </MudSelect>
                        <MudSwitch
                            @bind-Checked="@SetZones"
                            Class="mt-3"
                            ThumbIcon="@(SetZones==true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)"
                            ThumbIconColor="@(SetZones==true ? Color.Primary : Color.Error)">Automatically set speed zones</MudSwitch>
                        <MudNumericField 
                            @bind-Value="Radius"
                            Class="mt-3"
                            Label="Zone radius in meters per second"
                            Variant="Variant.Text"
                            Min="0.01"
                            Max="0.5"
                            Step="0.01"/>
                        <MudNumericField
                            @bind-Value="Mas"
                            Class="mt-3"
                            Label="vVO2max in meters per second"
                            Variant="Variant.Text"
                            Min="1.0"
                            Max="10.0"
                            Step="0.1"/>
                        <MudStack Row=true Class="justify-space-between pt-4">
                            <MudText></MudText>
                            <MudButton 
                                Variant="Variant.Filled"
                                Color="Color.Primary"
                                Disabled="@(!SettingsFormValid)"
                                OnClick="@(async () => await SetSettings())"
                                Class="ml-auto" >Save settings</MudButton>
                        </MudStack>
                    </MudForm>
                </ChildContent>
            </MudExpansionPanel>
        </MudExpansionPanels>
    </MudItem>
</MudGrid>
